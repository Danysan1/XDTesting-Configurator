# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  FrontendTest:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Install dependencies
      - name: Install dependencies
        run: |
          cd configurator
          npm ci

      # Test code
      - name: Test code
        run: |
          cd configurator
          npm test -- --no-watch --no-progress --browsers=ChromeHeadlessCI --code-coverage
        
      # Create report
      - name: Generate Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: configurator/coverage/ng-test/cobertura-coverage.xml
          format: markdown
          output: file
          
      # Output job summary. See https://github.blog/2022-05-09-supercharging-github-actions-with-job-summaries/
      - name: Output Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

  BackendTest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install PHP 8
        run: |
          sudo apt update
          sudo apt install software-properties-common -y
          sudo add-apt-repository ppa:ondrej/php -y
          sudo apt install git unzip libzip-dev php8.1 php8.1-zip php8.1-mbstring php8.1-xdebug -y

      - name: Install Composer
        run: cd server && ./install-composer.sh
          
      - name: Install dependencies
        run: cd server && php composer.phar install

      - name: Run tests
        run: cd server && XDEBUG_MODE=coverage php composer.phar test

      - name: Generate Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: server/coverage/cobertura.xml
          format: markdown
          output: file
          
      # Output job summary. See https://github.blog/2022-05-09-supercharging-github-actions-with-job-summaries/
      - name: Output Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
